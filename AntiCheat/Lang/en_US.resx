<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="config_Boss" xml:space="preserve">
    <value>Spamming bell ringing detection</value>
  </data>
  <data name="config_ChatReal" xml:space="preserve">
    <value>Fake chat message detection</value>
  </data>
  <data name="config_DespawnItem" xml:space="preserve">
    <value>Abnormal item despawn detection</value>
  </data>
  <data name="config_Enemy" xml:space="preserve">
    <value>Abnormal monster behavior detection</value>
  </data>
  <data name="config_FreeBuy" xml:space="preserve">
    <value>Free purchases detection</value>
  </data>
  <data name="config_Gift" xml:space="preserve">
    <value>Abnormal gift box interaction detection</value>
  </data>
  <data name="config_GrabObject" xml:space="preserve">
    <value>Item pickup distance detection</value>
  </data>
  <data name="config_InfiniteAmmo" xml:space="preserve">
    <value>Infinite ammo detection</value>
  </data>
  <data name="config_Invisibility" xml:space="preserve">
    <value>Invisible player detection</value>
  </data>
  <data name="config_ItemCooldown" xml:space="preserve">
    <value>Abnormal item interaction cooldown detection</value>
  </data>
  <data name="config_Jetpack" xml:space="preserve">
    <value>Abnormal jetpack explosion detection</value>
  </data>
  <data name="config_Kick" xml:space="preserve">
    <value>Kick player when this behavior is detected</value>
  </data>
  <data name="config_KillEnemy" xml:space="preserve">
    <value>Instant enemy kill detection</value>
  </data>
  <data name="config_Landmine" xml:space="preserve">
    <value>Abnormal landmine triggering detection</value>
  </data>
  <data name="config_Log" xml:space="preserve">
    <value>Show log</value>
  </data>
  <data name="config_Map" xml:space="preserve">
    <value>Mini-Map mod detection</value>
  </data>
  <data name="config_Mask" xml:space="preserve">
    <value>Abnormal masked enemy detection</value>
  </data>
  <data name="config_Nameless" xml:space="preserve">
    <value>Player name detection (Nameless or Unknown)</value>
  </data>
  <data name="config_Prefix" xml:space="preserve">
    <value>Set the lobby name prefix, empty to disable</value>
  </data>
  <data name="config_RemoteTerminal" xml:space="preserve">
    <value>Remote terminal detection</value>
  </data>
  <data name="config_ShipBuild" xml:space="preserve">
    <value>Abnormal furniture position detection</value>
  </data>
  <data name="config_ShipConfig2" xml:space="preserve">
    <value>Client-side player can only pull the lever when specified player number count are reached (StartGameOnlyHost must set to false)</value>
  </data>
  <data name="config_ShipConfig3" xml:space="preserve">
    <value>Allow client-side player to take off when after this time (based on game world)</value>
  </data>
  <data name="config_ShipConfig4" xml:space="preserve">
    <value>Allow client-side player to take off when the number of alive players in the ship are exceed the specified ratio of total alive players number (0-100%)</value>
  </data>
  <data name="config_ShipConfig5" xml:space="preserve">
    <value>Detect malicious lever pull behavior (kick player when this behavior is detected)</value>
  </data>
  <data name="config_ShipConfig6" xml:space="preserve">
    <value>You are the host, your vote can call the autopilot.</value>
  </data>
  <data name="config_ShipLight" xml:space="preserve">
    <value>Spamming light switch detection</value>
  </data>
  <data name="config_ShipSetting" xml:space="preserve">
    <value>Only the host can land the ship</value>
  </data>
  <data name="config_ShipTerminal" xml:space="preserve">
    <value>Spamming terminal noise detection</value>
  </data>
  <data name="config_Shovel" xml:space="preserve">
    <value>Abnormal shovel damage detection</value>
  </data>
  <data name="config_SpawnWebTrap" xml:space="preserve">
    <value>Abnormal spiderweb spawning detection</value>
  </data>
  <data name="config_Turret" xml:space="preserve">
    <value>Abnormal turret berserk mode detection</value>
  </data>
  <data name="Item_Shotgun" xml:space="preserve">
    <value>shotgun</value>
  </data>
  <data name="Item_Shovel" xml:space="preserve">
    <value>shovel</value>
  </data>
  <data name="log_load" xml:space="preserve">
    <value>AntiCheat mod are Loaded!</value>
  </data>
  <data name="log_refuse_connect" xml:space="preserve">
    <value>{steamId} attempting reconnect to the game but was rejected! (already kicked)</value>
  </data>
  <data name="MessageFormat" xml:space="preserve">
    <value>&lt;color=red&gt;{Prefix} {msg}&lt;/color&gt;</value>
  </data>
  <data name="msg_behind_player" xml:space="preserve">
    <value>&lt;color=yellow&gt;[{player}] &lt;color=red&gt;was left behind.&lt;/color&gt;&lt;/color&gt;</value>
  </data>
  <data name="msg_Boss" xml:space="preserve">
    <value>Detected player {player} spamming bell ringing!</value>
  </data>
  <data name="msg_ChatReal" xml:space="preserve">
    <value>Detected player {player} try to fake as {player2} in chat!</value>
  </data>
  <data name="msg_DespawnItem" xml:space="preserve">
    <value>Detected player {player} destroying items!</value>
  </data>
  <data name="msg_Enemy_ChangeOwnershipOfEnemy" xml:space="preserve">
    <value>Detected player {player} attempting to change the monster behavior!</value>
  </data>
  <data name="msg_Enemy_SwitchToBehaviour" xml:space="preserve">
    <value>Detected player {player} attempting to change the monster mechanism!</value>
  </data>
  <data name="msg_FreeBuy_Item" xml:space="preserve">
    <value>Detected player {player} purchasing item for free!</value>
  </data>
  <data name="msg_FreeBuy_Level" xml:space="preserve">
    <value>Detected player {player} routing to a priced moon for free!</value>
  </data>
  <data name="msg_FreeBuy_SetMoney" xml:space="preserve">
    <value>Detected player {player} are modifying credits({Money})!</value>
  </data>
  <data name="msg_FreeBuy_unlockable" xml:space="preserve">
    <value>Detected player {player} purchasing unlockable for free!</value>
  </data>
  <data name="msg_game_start" xml:space="preserve">
    <value>&lt;color=green&gt;Anti-Cheat (v{ver}) is enabled in this lobby&lt;/color&gt;</value>
  </data>
  <data name="msg_Gift" xml:space="preserve">
    <value>Detected player {player} interact the gift box abnormally!</value>
  </data>
  <data name="msg_GrabObject" xml:space="preserve">
    <value>Detected player {player} taking objects from too far away! (Player coordinates: {player_position}|Item coordinates: {object_position})</value>
  </data>
  <data name="msg_InfiniteAmmo" xml:space="preserve">
    <value>Detected player {player} using infinite ammo!</value>
  </data>
  <data name="msg_Invisibility" xml:space="preserve">
    <value>Detected player {player} are turned invisible! (Player coordinates: {player_position})</value>
  </data>
  <data name="msg_ItemCooldown" xml:space="preserve">
    <value>Detected player {player} using {item} without respect the cooldown!</value>
  </data>
  <data name="msg_Jetpack" xml:space="preserve">
    <value>Detected player {player} exploded the jetpack!</value>
  </data>
  <data name="msg_Kick" xml:space="preserve">
    <value>{player} was kicked!</value>
  </data>
  <data name="msg_KillEnemy" xml:space="preserve">
    <value>Detected player {player} killed an enemy instantly! ({enemyName}, monster HP before: {HP})</value>
  </data>
  <data name="msg_Landmine" xml:space="preserve">
    <value>Detected player {player} anomaly triggered the landmine!</value>
  </data>
  <data name="msg_Map" xml:space="preserve">
    <value>Detected player {player} using Mini-Map mod!</value>
  </data>
  <data name="msg_Mask" xml:space="preserve">
    <value>Detected player {player} abnormally spawning masked enemies!</value>
  </data>
  <data name="msg_Nameless" xml:space="preserve">
    <value>Detected player name anomalous!</value>
  </data>
  <data name="msg_RemoteTerminal" xml:space="preserve">
    <value>Detected player {player} Remote Terminal!</value>
  </data>
  <data name="msg_ShipBuild" xml:space="preserve">
    <value>Detected player {player} placing furniture in abnormal position! ({position})</value>
  </data>
  <data name="msg_ShipConfig2" xml:space="preserve">
    <value>{player} Please wait until the number of people in the ship are reached {cfg} or more before pulling the lever, thx!</value>
  </data>
  <data name="msg_ShipConfig4" xml:space="preserve">
    <value>{player} Please wait until the number of people in the ship are reached {player_count}({cfg4}%) and the time are reached {cfg3} to depart. (current time: {game_time})</value>
  </data>
  <data name="msg_ShipConfig5" xml:space="preserve">
    <value>Detected player {player} malicious use the ship lever!</value>
  </data>
  <data name="msg_ShipLight" xml:space="preserve">
    <value>Detected player {player} switching light too often!</value>
  </data>
  <data name="msg_ShipTerminal" xml:space="preserve">
    <value>Detected player {player} making too many terminal noise!</value>
  </data>
  <data name="msg_Shovel" xml:space="preserve">
    <value>Detected player {player} deal abnormal damage to player {player2} by using shovel! ({damageAmount})</value>
  </data>
  <data name="msg_Shovel2" xml:space="preserve">
    <value>Detected player {player} abnormal shovel range, and damage to player {player2}! ({damageAmount})</value>
  </data>
  <data name="msg_Shovel3" xml:space="preserve">
    <value>Detected player {player} damage to player {player2} without any weapon! ({damageAmount})</value>
  </data>
  <data name="msg_Shovel4" xml:space="preserve">
    <value>Detected player {player} deal abnormal damage to target {enemyName} by using shovel! ({damageAmount})</value>
  </data>
  <data name="msg_Shovel5" xml:space="preserve">
    <value>Detected player {player} abnormal shovel range, and damaged to target {enemyName}! ({damageAmount})</value>
  </data>
  <data name="msg_Shovel6" xml:space="preserve">
    <value>Detected player {player} damage to target {enemyName} without any weapon! ({damageAmount})</value>
  </data>
  <data name="msg_snc_player" xml:space="preserve">
    <value>&lt;color=yellow&gt;[{player}] &lt;color=green&gt;New creature data sent to terminal! &lt;/color&gt;&lt;/color&gt;</value>
  </data>
  <data name="msg_Turret" xml:space="preserve">
    <value>Detected player {player} triggered turret overkill! (distance: {Distance})</value>
  </data>
  <data name="msg_Turret2" xml:space="preserve">
    <value>Detected player {player} triggered turret overkill! (With No Weapon)</value>
  </data>
  <data name="msg_vote" xml:space="preserve">
    <value>You are the host, your vote can call the autopilot.</value>
  </data>
  <data name="msg_wlc_player" xml:space="preserve">
    <value>&lt;color=green&gt;&lt;color=yellow&gt;[{player}]&lt;/color&gt; joined the ship.&lt;/color&gt;</value>
  </data>
  <data name="Prefix" xml:space="preserve">
    <value>[AntiCheat]</value>
  </data>
</root>
